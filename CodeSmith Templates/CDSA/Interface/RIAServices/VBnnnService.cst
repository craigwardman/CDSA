<%@ CodeTemplate Language="VB" TargetLanguage="Text" Debug="False" Description="" src="../../../CSLib.vb" %>
<%@ Property Name="Table" Type="SchemaExplorer.TableSchema" Category="Context" Description="" %>
<%@ Property Name="RootNs" Type="System.String" Default="" Optional="False" Category="Namespace" Description="The root namespace that will link all the layers." %>
<%@ Property Name="Ns" Type="System.String" Default="" Optional="True" Category="Namespace" Description="An optional namespace string to include." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>

<%
dim formattedTableName as string=CSLib.GetFormattedName(Table.Name)


dim pk_dataType as string="int"
If Table.HasPrimaryKey then
    pk_dataType=CSLib.GetTypeName(Table.PrimaryKey.MemberColumns.Item(0).SystemType,Table.PrimaryKey.MemberColumns.Item(0).AllowDBNull)
end if
            
%>
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.ComponentModel.DataAnnotations
Imports System.ServiceModel.DomainServices.Hosting
Imports System.ServiceModel.DomainServices.Server

Namespace RIAServices
    <EnableClientAccess()> _
    Partial Public Class <%=formattedTableName%>Service
        Inherits DomainService

        Public Function Get<%=formattedTableName%>ById(ByVal id As <%=pk_dataType%>) As DDL.DTOs.<%=formattedTableName%>
            Return BLL.Management.<%=formattedTableName%>Manager.GetInstance().GetRecord(id)
        End Function

        Public Function Get<%=formattedTableName%>s() As IEnumerable(Of DDL.DTOs.<%=formattedTableName%>)
            Return BLL.Management.<%=formattedTableName%>Manager.GetInstance().GetRecords()
        End Function

        Public Sub Update<%=formattedTableName%>(ByVal entity As DDL.DTOs.<%=formattedTableName%>)
            BLL.Management.<%=formattedTableName%>Manager.GetInstance().SaveRecord(entity)
        End Sub

        Public Sub Insert<%=formattedTableName%>(ByVal entity As DDL.DTOs.<%=formattedTableName%>)
            BLL.Management.<%=formattedTableName%>Manager.GetInstance().SaveRecord(entity)
        End Sub

        Public Sub Delete<%=formattedTableName%>(ByVal entity As DDL.DTOs.<%=formattedTableName%>)
            BLL.Management.<%=formattedTableName%>Manager.GetInstance().DeleteRecord(entity.UniqueId)
        End Sub
    End Class

End Namespace