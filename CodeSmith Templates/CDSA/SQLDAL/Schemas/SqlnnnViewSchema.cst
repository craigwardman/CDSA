<%@ CodeTemplate Language="VB" TargetLanguage="Text" Debug="False" Description="" src="../../../CSLib.vb" %>
<%@ Property Name="View" Type="SchemaExplorer.ViewSchema" Category="Context" Description="" %>
<%@ Property Name="RootNs" Type="System.String" Default="" Optional="False" Category="Namespace" Description="The root namespace that will link all the layers." %>
<%@ Property Name="Ns" Type="System.String" Default="" Optional="True" Category="Namespace" Description="An optional namespace string to include." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>

<%
dim formattedTableName as string=CSLib.GetFormattedName(View.Name)

%>
namespace <%=RootNs%>.SQLDAL
{
	<%
	if Ns<>"" then
	%>
	namespace <%=Ns & "."%>Schemas
	<%
	else
	%>
	namespace Schemas
	<%
	end if
	%>
	{
		public partial class Sql<%=formattedTableName%>Schema : DDL.Definitions.Schemas.I<%=formattedTableName%>Schema
		{
	
			//use singleton pattern
			#region "Singleton"
	
			private static Sql<%=formattedTableName%>Schema _instance = new Sql<%=formattedTableName%>Schema();
	
			private Sql<%=formattedTableName%>Schema()
			{
			}
	
			public static Sql<%=formattedTableName%>Schema GetInstance()
			{
				return _instance;
			}
	
			#endregion
	
	
			#region I<%=formattedTableName%>Schema Members
	
			<%
			for i as integer = 0 to View.Columns.Count-1
			%>
			public string @<%=CSLib.GetFormattedName(View.Columns.Item(i).Name)%>
			{
				get { return "<%=View.Columns.Item(i).Name%>"; }
			}
			<%
			next i
			%>
	
			#endregion
	
			#region ISchemaBase Members
	
			public string DataContainerName
			{
				get { return "<%=View.Name%>"; }
			}
	
	
			#endregion
		}
	}
}