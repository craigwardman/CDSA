<%@ CodeTemplate Language="VB" TargetLanguage="Text" Debug="False" Description="" src="../../../CSLib.vb" %>
<%@ Property Name="Table" Type="SchemaExplorer.TableSchema" Category="Context" Description="" %>
<%@ Property Name="RootNs" Type="System.String" Default="" Optional="False" Category="Namespace" Description="The root namespace that will link all the layers." %>
<%@ Property Name="Ns" Type="System.String" Default="" Optional="True" Category="Namespace" Description="An optional namespace string to include." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>

<%
dim formattedTableName as string=CSLib.GetFormattedName(Table.Name)

%>
namespace <%=RootNs%>.SQLDAL<%= IIf(Ns<>"", "." & Ns, "") %>.Schemas
{
    public partial class Sql<%=formattedTableName%>Schema : DDL.Definitions.Schemas.I<%=formattedTableName%>Schema
    {
        // use singleton pattern
        private static Sql<%=formattedTableName%>Schema instance = new Sql<%=formattedTableName%>Schema();

        private Sql<%=formattedTableName%>Schema()
        {
        }

        #region I<%=formattedTableName%>Schema Members
        <%
        for i as integer = 0 to Table.NonPrimaryKeyColumns.Count-1
        %>
        public string @<%=CSLib.GetFormattedName(Table.NonPrimaryKeyColumns.Item(i).Name)%>
        {
            get { return "<%=Table.NonPrimaryKeyColumns.Item(i).Name%>"; }
        }
        
        <%
        next i
        %>
        #endregion

        #region ISchemaBase Members
        public string DataContainerName
        {
            get { return "<%=Table.Name%>"; }
        }

        public string UniqueId
        {
            <% If Table.HasPrimaryKey then %>
            get { return "<%=Table.PrimaryKey.MemberColumns.Item(0).Name%>"; }
            <% else %>
            get { return ""; }
            <%end if%>
        }
        #endregion
        
        public static Sql<%=formattedTableName%>Schema GetInstance()
        {
            return instance;
        }
    }
}