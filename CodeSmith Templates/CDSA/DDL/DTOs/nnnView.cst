<%@ CodeTemplate Language="VB" TargetLanguage="Text" Debug="False" Description="" src="../../../CSLib.vb" %>
<%@ Property Name="View" Type="SchemaExplorer.ViewSchema" Category="Context" Description="" %>
<%@ Property Name="RootNs" Type="System.String" Default="" Optional="False" Category="Namespace" Description="The root namespace that will link all the layers." %>
<%@ Property Name="Ns" Type="System.String" Default="" Optional="True" Category="Namespace" Description="An optional namespace string to include." %>
<%@ Property Name="DTOsForWCF" Type="System.Boolean" Default="False" Optional="False" Category="Options" Description="Decorate the DTOs for use in WCF services." %>
<%@ Property Name="RIAServices" Type="System.Boolean" Default="False" Optional="False" Category="Options" Description="Decorate the DTOs for use in RIA for Silverlight." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
using System;
<% If DTOsForWCF then %>
using System.Runtime.Serialization;
<%end if%>
<% If RIAServices then %>
using System.ComponentModel.DataAnnotations;
<%end if%>

namespace <%=RootNs%>.DDL
{
	<%
	dim formattedTableName as string=CSLib.GetFormattedName(View.Name)
	
	if Ns<>"" then
	%>
	namespace <%=Ns & "."%>DTOs
	<%
	else
	%>
	namespace DTOs
	<%
	end if
	%>
	{
		[Serializable()]
		<% If DTOsForWCF then %>
		[DataContract()]
		<%end if%>
		public sealed partial class @<%=formattedTableName%>
		{
			<%
			for i as integer = 0 to View.Columns.Count-1
			%>
			private <%=CSLib.GetTypeName(View.Columns.Item(i).SystemType,View.Columns.Item(i).AllowDBNull)%> _<%=CSLib.GetFormattedName(View.Columns.Item(i).Name)%>;
			<% If DTOsForWCF then %>
			[DataMember()]
			<%end if%>
			public <%=CSLib.GetTypeName(View.Columns.Item(i).SystemType,View.Columns.Item(i).AllowDBNull)%> @<%=CSLib.GetFormattedName(View.Columns.Item(i).Name)%>
			{
				get {return _<%=CSLib.GetFormattedName(View.Columns.Item(i).Name)%>;}
				set {_<%=CSLib.GetFormattedName(View.Columns.Item(i).Name)%> = value;}
			}
			
			<%
			next i
			%>
			
		}
	
	}
}