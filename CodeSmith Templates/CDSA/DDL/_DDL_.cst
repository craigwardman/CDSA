<%@ CodeTemplate Language="VB" TargetLanguage="Text" src="../../CSLib.vb" Inherits="" Debug="false" %>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Category="Context" Description="" %>
<%@ Property Name="IgnorePrefix" Type="System.String" Default="Cms" Optional="True" Category="Input" Description="Ignore tables with the given prefix" %>
<%@ Property Name="IncludePrefix" Type="System.String" Default="" Optional="True" Category="Input" Description="Only process tables with the given prefix" %>
<%@ Property Name="RootDirectory" Type="System.String" Default="c:\CWCode\_DDL"  Optional="False" Category="Output" Description="Where to output the DDL code and its subfolders." %>
<%@ Property Name="RootNs" Type="System.String" Default="" Optional="False" Category="Namespace" Description="The root namespace that will link all the layers." %>
<%@ Property Name="Ns" Type="System.String" Default="" Optional="True" Category="Namespace" Description="An optional namespace string to include." %>
<%@ Property Name="DTOsForWCF" Type="System.Boolean" Default="False" Optional="False" Category="Options" Description="Decorate the DTOs for use in WCF services." %>
<%@ Property Name="RIAServices" Type="System.Boolean" Default="False" Optional="False" Category="Options" Description="Decorate the DTOs for use in RIA for Silverlight." %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.Engine" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>

<%
	'format the root folder
	if not RootDirectory.EndsWith("\") then RootDirectory &= "\"
	
%>

<script runat="template">
'declare variables
dim currentTemplate as CodeTemplate

public sub Go()
	
	'*** ROOT ***
	'create the output folder
	me.Response.Write("Creating DDL Files in (" & RootDirectory & ") ...")
	CSLib.SafeCreateDirectory(RootDirectory)
	
	'create the output folder
	CSLib.SafeCreateDirectory(RootDirectory & "Definitions\")
	
	'create the ISchemaCatalog
	currentTemplate=me.GetCodeTemplateInstance(".\Definitions\ISchemaCatalog.cst",true)
	currentTemplate.SetProperty("RootNs", RootNs)
	currentTemplate.SetProperty("Ns", Ns)
	currentTemplate.SetProperty("SourceDatabase", SourceDatabase)
	currentTemplate.SetProperty("IgnorePrefix", IgnorePrefix)
	currentTemplate.SetProperty("IncludePrefix", IncludePrefix)
	currentTemplate.RenderToFile(RootDirectory & "Definitions\ISchemaCatalog.cs", true)
		
	'*** DATA ***
	
	'create the IData
	currentTemplate=me.GetCodeTemplateInstance(".\Definitions\IRecordData.cst",true)
	currentTemplate.SetProperty("RootNs", RootNs)
	currentTemplate.SetProperty("Ns", Ns)
	currentTemplate.RenderToFile(RootDirectory & "Definitions\IRecordData.cs", true)

	'*** DTOs ***
	'create the output folder
	CSLib.SafeCreateDirectory(RootDirectory & "DTOs\")
	
	'create a nnn for each table in the database
	currentTemplate=me.GetCodeTemplateInstance(".\DTOs\nnn.cst",true)
	currentTemplate.SetProperty("RootNs", RootNs)
	currentTemplate.SetProperty("Ns", Ns)
	currentTemplate.SetProperty("DTOsForWCF", DTOsForWCF)
	currentTemplate.SetProperty("RIAServices", RIAServices)
	for i as integer=0 to SourceDatabase.Tables.count -1
		if IgnorePrefix<>"" then
			if SourceDatabase.Tables.Item(i).Name.StartsWith(IgnorePrefix) then continue for
		end if
		if IncludePrefix<>"" then
			if not SourceDatabase.Tables.Item(i).Name.StartsWith(IncludePrefix) then continue for
		end if
		
		currentTemplate.SetProperty("Table", SourceDatabase.Tables.Item(i))
		currentTemplate.RenderToFile(RootDirectory & "DTOs\" & CSLib.GetFormattedName(SourceDatabase.Tables.Item(i).Name) & ".cs", true)
	next i
	
	
	'*** SCHEMAS ***
	'create the output folder
	CSLib.SafeCreateDirectory(RootDirectory & "Definitions\Schemas\")
	
	'create the ISchemaBase
	currentTemplate=me.GetCodeTemplateInstance(".\Definitions\Schemas\ISchemaBase.cst",true)
	currentTemplate.SetProperty("RootNs", RootNs)
	currentTemplate.SetProperty("Ns", Ns)
	currentTemplate.RenderToFile(RootDirectory & "Definitions\Schemas\ISchemaBase.cs", true)
	
	'create a InnnSchema for each table in the database
	currentTemplate=me.GetCodeTemplateInstance(".\Definitions\Schemas\InnnSchema.cst",true)
	currentTemplate.SetProperty("RootNs", RootNs)
	currentTemplate.SetProperty("Ns", Ns)
	for i as integer=0 to SourceDatabase.Tables.count -1
		if IgnorePrefix<>"" then
			if SourceDatabase.Tables.Item(i).Name.StartsWith(IgnorePrefix) then continue for
		end if
		if IncludePrefix<>"" then
			if not SourceDatabase.Tables.Item(i).Name.StartsWith(IncludePrefix) then continue for
		end if
		
		currentTemplate.SetProperty("Table", SourceDatabase.Tables.Item(i))
		currentTemplate.RenderToFile(RootDirectory & "Definitions\Schemas\I" & CSLib.GetFormattedName(SourceDatabase.Tables.Item(i).Name) & "Schema.cs", true)
	next i
	
	me.Response.WriteLine("DONE!")
end sub
</script>
<%me.Go()%>